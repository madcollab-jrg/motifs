if (length(model) == 0) {
next
} else if (length(model$coef[,1]) < 4) {
next
} else {
p_val <- pf(model$fstatistic[1], model$fstatistic[2], model$fstatistic[3], lower.tail = FALSE)
actual_0 <- TS_data$vaccinations_black[min(which(TS_data$Treatment == 1))]
actual_3 <- TS_data$vaccinations_black[which(TS_data$Time_since == 3)]
actual_5 <- TS_data$vaccinations_black[which(TS_data$Time_since == 5)]
counterfactual_0 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[min(which(TS_data$Treatment == 1))]
counterfactual_3 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[which(TS_data$Time_since == 3)]
counterfactual_5 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[which(TS_data$Time_since == 5)]
all_models <<- add_row(all_models, "ID" = as.integer(id),
"Encouragement" = as.character(name), "Group" = "Black",
"Intercept" = model$coef[1,1], "P-value (Intercept)" = model$coef[1,4],
"Time" = model$coef[2,1], "P-value (Time)" = model$coef[2,4],
"Treatment" = model$coef[3,1], "P-value (Treatment)" = model$coef[3,4],
"Time Since" = model$coef[4,1], "P-value (Time Since)" = model$coef[4,4],
"P-value (Model)" = p_val,
"Actual (Day 0)" = actual_0,
"Counterfactual (Day 0)" = counterfactual_0,
"Difference (Day 0)" = actual_0 - counterfactual_0,
"Actual (Day 3)" = actual_3,
"Counterfactual (Day 3)" = counterfactual_3,
"Difference (Day 3)" = actual_0 - counterfactual_3,
"Actual (Day 5)" =  actual_5,
"Counterfactual (Day 5)" = counterfactual_5,
"Difference (Day 5)" = actual_5 - counterfactual_5)
model
}
}
if (grepl("aian", race)) {
# get the time series
TS_data <- vaccinations_tract %>%
mutate(Treatment = ifelse(date < interruption_date, 0, 1),
Time_since = ifelse(Treatment == 0, 0, as.integer(date - interruption_date))) %>%
select(vaccinations_aian, date, Time, Treatment, Time_since)
interruption_index <- min(which(TS_data$Time_since != 0))
# show the time series in a scatter plot (only 14 days before / after the interruption)
TS_data_new <- TS_data[max(1, (interruption_index - 7)) : min((interruption_index + 6), nrow(TS_data)), ] # change this date range
TS_data_new <- mutate(TS_data_new, period = ifelse(Treatment == 0, "Pre", "Post"))
TS_data_new2 <- data.frame(TS_data_new)
#print(TS_data_new)
#str(TS_data_new)
#### CODE WORKS
p1 <- ggplot(TS_data_new2, aes(x = date, y = vaccinations_aian, group = period)) +
geom_point()  +
ggtitle(paste("Effect of the", name, "encouragement (Aian)")) +
labs(x = "Date", y  = "Daily Vaccinations (Aian)") +
geom_smooth(method = "lm", color = "#0072B5FF", se = TRUE) +
geom_vline(xintercept = as.numeric(TS_data_new2$date[min(which(TS_data_new2$period == "Post"))]), linetype = 'dashed', col = "red") +
theme_ipsum() +
scale_fill_nejm() +
theme(plot.margin = unit(c(.1,.1,.1,.1), "cm"))
print(p1)
#### CODE WORKS
# add the regression line
TS_model <- lm(vaccinations_aian ~ Time + Treatment + Time_since, data = TS_data_new)
#lines(TS_data_new$date, TS_model$fitted.values, col = "steelblue", lwd = 2 )
summary(TS_model)
# get the ITS model
stargazer(TS_model, type = "html", dep.var.labels = ("Daily Vaccinations (Aian)"),
column.labels = ("Model results"),
covariate.labels = c("Time", "Encouragement", "Time Since Encouragement"),
omit.stat = "all", digits = 2)
# look at the trend only during the 2 weeks
during_encouragment <- TS_data[max(1, (interruption_index)) : min(nrow(TS_data), (interruption_index + 7)),] # CHANGED
p2 <- ggplot(during_encouragment, aes(x = date, y = vaccinations_aian)) +
labs(x = "Date", y = "Daily Vaccinations (Aian)") +
ggtitle(paste("Daily Vaccinations Trend during the Encouragment (Aian)")) +
geom_point() +
geom_smooth(method = "lm", col = "gray", se = TRUE)
print(p2)
model <- summary(TS_model)
if (length(model) == 0) {
next
} else if (length(model$coef[,1]) < 4) {
next
} else {
p_val <- pf(model$fstatistic[1], model$fstatistic[2], model$fstatistic[3], lower.tail = FALSE)
actual_0 <- TS_data$vaccinations_aian[min(which(TS_data$Treatment == 1))]
actual_3 <- TS_data$vaccinations_aian[which(TS_data$Time_since == 3)]
actual_5 <- TS_data$vaccinations_aian[which(TS_data$Time_since == 5)]
counterfactual_0 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[min(which(TS_data$Treatment == 1))]
counterfactual_3 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[which(TS_data$Time_since == 3)]
counterfactual_5 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[which(TS_data$Time_since == 5)]
all_models <<- add_row(all_models, "ID" = as.integer(id),
"Encouragement" = as.character(name), "Group" = "Aian",
"Intercept" = model$coef[1,1], "P-value (Intercept)" = model$coef[1,4],
"Time" = model$coef[2,1], "P-value (Time)" = model$coef[2,4],
"Treatment" = model$coef[3,1], "P-value (Treatment)" = model$coef[3,4],
"Time Since" = model$coef[4,1], "P-value (Time Since)" = model$coef[4,4],
"P-value (Model)" = p_val,
"Actual (Day 0)" = actual_0,
"Counterfactual (Day 0)" = counterfactual_0,
"Difference (Day 0)" = actual_0 - counterfactual_0,
"Actual (Day 3)" = actual_3,
"Counterfactual (Day 3)" = counterfactual_3,
"Difference (Day 3)" = actual_0 - counterfactual_3,
"Actual (Day 5)" =  actual_5,
"Counterfactual (Day 5)" = counterfactual_5,
"Difference (Day 5)" = actual_5 - counterfactual_5)
model
}
}
if (grepl("hispanic", race)) {
# get the time series
TS_data <- vaccinations_tract %>%
mutate(Treatment = ifelse(date < interruption_date, 0, 1),
Time_since = ifelse(Treatment == 0, 0, as.integer(date - interruption_date))) %>%
select(vaccinations_Ehispanic, date, Time, Treatment, Time_since)
interruption_index <- min(which(TS_data$Time_since != 0))
# show the time series in a scatter plot (only 14 days before / after the interruption)
TS_data_new <- TS_data[max(1, (interruption_index - 7)) : min((interruption_index + 6), nrow(TS_data)), ] # change this date range
TS_data_new <- mutate(TS_data_new, period = ifelse(Treatment == 0, "Pre", "Post"))
TS_data_new2 <- data.frame(TS_data_new)
#print(TS_data_new)
#str(TS_data_new)
#### CODE WORKS
p1 <- ggplot(TS_data_new2, aes(x = date, y = vaccinations_Ehispanic, group = period)) +
geom_point()  +
ggtitle(paste("Effect of the", name, "encouragement (Hispanic)")) +
labs(x = "Date", y  = "Daily Vaccinations (Hispanic)") +
geom_smooth(method = "lm", color = "#0072B5FF", se = TRUE) +
geom_vline(xintercept = as.numeric(TS_data_new2$date[min(which(TS_data_new2$period == "Post"))]), linetype = 'dashed', col = "red") +
theme_ipsum() +
scale_fill_nejm() +
theme(plot.margin = unit(c(.1,.1,.1,.1), "cm"))
print(p1)
#### CODE WORKS
# add the regression line
TS_model <- lm(vaccinations_Ehispanic ~ Time + Treatment + Time_since, data = TS_data_new)
#lines(TS_data_new$date, TS_model$fitted.values, col = "steelblue", lwd = 2 )
summary(TS_model)
# get the ITS model
stargazer(TS_model, type = "html", dep.var.labels = ("Daily Vaccinations (Hispanic)"),
column.labels = ("Model results"),
covariate.labels = c("Time", "Encouragement", "Time Since Encouragement"),
omit.stat = "all", digits = 2)
# look at the trend only during the 2 weeks
during_encouragment <- TS_data[max(1, (interruption_index)) : min(nrow(TS_data), (interruption_index + 7)),] # CHANGED
p2 <- ggplot(during_encouragment, aes(x = date, y = vaccinations_Ehispanic)) +
labs(x = "Date", y = "Daily Vaccinations (Hispanic)") +
ggtitle(paste("Daily Vaccinations Trend during the Encouragment (Hispanic)")) +
geom_point() +
geom_smooth(method = "lm", col = "gray", se = TRUE)
print(p2)
model <- summary(TS_model)
if (length(model) == 0) {
next
} else if (length(model$coef[,1]) < 4) {
next
} else {
p_val <- pf(model$fstatistic[1], model$fstatistic[2], model$fstatistic[3], lower.tail = FALSE)
actual_0 <- TS_data$vaccinations_Ehispanic[min(which(TS_data$Treatment == 1))]
actual_3 <- TS_data$vaccinations_Ehispanic[which(TS_data$Time_since == 3)]
actual_5 <- TS_data$vaccinations_Ehispanic[which(TS_data$Time_since == 5)]
counterfactual_0 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[min(which(TS_data$Treatment == 1))]
counterfactual_3 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[which(TS_data$Time_since == 3)]
counterfactual_5 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[which(TS_data$Time_since == 5)]
all_models <<- add_row(all_models, "ID" = as.integer(id),
"Encouragement" = as.character(name), "Group" = "Hispanic",
"Intercept" = model$coef[1,1], "P-value (Intercept)" = model$coef[1,4],
"Time" = model$coef[2,1], "P-value (Time)" = model$coef[2,4],
"Treatment" = model$coef[3,1], "P-value (Treatment)" = model$coef[3,4],
"Time Since" = model$coef[4,1], "P-value (Time Since)" = model$coef[4,4],
"P-value (Model)" = p_val,
"Actual (Day 0)" = actual_0,
"Counterfactual (Day 0)" = counterfactual_0,
"Difference (Day 0)" = actual_0 - counterfactual_0,
"Actual (Day 3)" = actual_3,
"Counterfactual (Day 3)" = counterfactual_3,
"Difference (Day 3)" = actual_0 - counterfactual_3,
"Actual (Day 5)" =  actual_5,
"Counterfactual (Day 5)" = counterfactual_5,
"Difference (Day 5)" = actual_5 - counterfactual_5)
model
}
}
if (grepl("asian", race)) {
# get the time series
TS_data <- vaccinations_tract %>%
mutate(Treatment = ifelse(date < interruption_date, 0, 1),
Time_since = ifelse(Treatment == 0, 0, as.integer(date - interruption_date))) %>%
select(vaccinations_asian, date, Time, Treatment, Time_since)
interruption_index <- min(which(TS_data$Time_since != 0))
# show the time series in a scatter plot (only 14 days before / after the interruption)
TS_data_new <- TS_data[max(1, (interruption_index - 7)) : min((interruption_index + 6), nrow(TS_data)), ] # change this date range
TS_data_new <- mutate(TS_data_new, period = ifelse(Treatment == 0, "Pre", "Post"))
TS_data_new2 <- data.frame(TS_data_new)
#print(TS_data_new)
#str(TS_data_new)
#### CODE WORKS
p1 <- ggplot(TS_data_new2, aes(x = date, y = vaccinations_asian, group = period)) +
geom_point()  +
ggtitle(paste("Effect of the", name, "encouragement (Asian)")) +
labs(x = "Date", y  = "Daily Vaccinations (Asian)") +
geom_smooth(method = "lm", color = "#0072B5FF", se = TRUE) +
geom_vline(xintercept = as.numeric(TS_data_new2$date[min(which(TS_data_new2$period == "Post"))]), linetype = 'dashed', col = "red") +
theme_ipsum() +
scale_fill_nejm() +
theme(plot.margin = unit(c(.1,.1,.1,.1), "cm"))
print(p1)
#### CODE WORKS
# add the regression line
TS_model <- lm(vaccinations_asian ~ Time + Treatment + Time_since, data = TS_data_new)
#lines(TS_data_new$date, TS_model$fitted.values, col = "steelblue", lwd = 2 )
summary(TS_model)
# get the ITS model
stargazer(TS_model, type = "html", dep.var.labels = ("Daily Vaccinations (Asian)"),
column.labels = ("Model results"),
covariate.labels = c("Time", "Encouragement", "Time Since Encouragement"),
omit.stat = "all", digits = 2)
# look at the trend only during the 2 weeks
during_encouragment <- TS_data[max(1, (interruption_index)) : min(nrow(TS_data), (interruption_index + 7)),] # CHANGED
p2 <- ggplot(during_encouragment, aes(x = date, y = vaccinations_asian)) +
labs(x = "Date", y = "Daily Vaccinations (Asian)") +
ggtitle(paste("Daily Vaccinations Trend during the Encouragment (Asian)")) +
geom_point() +
geom_smooth(method = "lm", col = "gray", se = TRUE)
print(p2)
model <- summary(TS_model)
if (length(model) == 0) {
next
} else if (length(model$coef[,1]) < 4) {
next
} else {
p_val <- pf(model$fstatistic[1], model$fstatistic[2], model$fstatistic[3], lower.tail = FALSE)
actual_0 <- TS_data$vaccinations_asian[min(which(TS_data$Treatment == 1))]
actual_3 <- TS_data$vaccinations_asian[which(TS_data$Time_since == 3)]
actual_5 <- TS_data$vaccinations_asian[which(TS_data$Time_since == 5)]
counterfactual_0 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[min(which(TS_data$Treatment == 1))]
counterfactual_3 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[which(TS_data$Time_since == 3)]
counterfactual_5 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[which(TS_data$Time_since == 5)]
all_models <<- add_row(all_models, "ID" = as.integer(id),
"Encouragement" = as.character(name), "Group" = "Asian",
"Intercept" = model$coef[1,1], "P-value (Intercept)" = model$coef[1,4],
"Time" = model$coef[2,1], "P-value (Time)" = model$coef[2,4],
"Treatment" = model$coef[3,1], "P-value (Treatment)" = model$coef[3,4],
"Time Since" = model$coef[4,1], "P-value (Time Since)" = model$coef[4,4],
"P-value (Model)" = p_val,
"Actual (Day 0)" = actual_0,
"Counterfactual (Day 0)" = counterfactual_0,
"Difference (Day 0)" = actual_0 - counterfactual_0,
"Actual (Day 3)" = actual_3,
"Counterfactual (Day 3)" = counterfactual_3,
"Difference (Day 3)" = actual_0 - counterfactual_3,
"Actual (Day 5)" =  actual_5,
"Counterfactual (Day 5)" = counterfactual_5,
"Difference (Day 5)" = actual_5 - counterfactual_5)
model
}
}
# the whole population
# get the time series
TS_data <- vaccinations_tract %>%
mutate(Treatment = ifelse(date < interruption_date, 0, 1),
Time_since = ifelse(Treatment == 0, 0, as.integer(date - interruption_date))) %>%
select(vaccinations_day, date, Time, Treatment, Time_since)
interruption_index <- min(which(TS_data$Time_since != 0))
# show the time series in a scatter plot (only 14 days before / after the interruption)
TS_data_new <- TS_data[max(1, (interruption_index - 7)) : min((interruption_index + 6), nrow(TS_data)), ] # change this date range
TS_data_new <- mutate(TS_data_new, period = ifelse(Treatment == 0, "Pre", "Post"))
TS_data_new2 <- data.frame(TS_data_new)
#print(TS_data_new)
#str(TS_data_new)
#### CODE WORKS
p1 <- ggplot(TS_data_new2, aes(x = date, y = vaccinations_day, group = period)) +
geom_point()  +
ggtitle(paste("Effect of the", name, "encouragement (All)")) +
labs(x = "Date", y  = "Daily Vaccinations (All)") +
geom_smooth(method = "lm", color = "#0072B5FF", se = TRUE) +
geom_vline(xintercept = as.numeric(TS_data_new2$date[min(which(TS_data_new2$period == "Post"))]), linetype = 'dashed', col = "red") +
theme_ipsum() +
scale_fill_nejm() +
theme(plot.margin = unit(c(.1,.1,.1,.1), "cm"))
print(p1)
#### CODE WORKS
# add the regression line
TS_model <- lm(vaccinations_day ~ Time + Treatment + Time_since, data = TS_data_new)
#lines(TS_data_new$date, TS_model$fitted.values, col = "steelblue", lwd = 2 )
summary(TS_model)
# get the ITS model
stargazer(TS_model, type = "html", dep.var.labels = ("Daily Vaccinations (All)"),
column.labels = ("Model results"),
covariate.labels = c("Time", "Encouragement", "Time Since Encouragement"),
omit.stat = "all", digits = 2)
# look at the trend only during the 2 weeks
during_encouragment <- TS_data[max(1, (interruption_index)) : min(nrow(TS_data), (interruption_index + 7)),] # CHANGED
p2 <- ggplot(during_encouragment, aes(x = date, y = vaccinations_day)) +
labs(x = "Date", y = "Daily Vaccinations (All)") +
ggtitle(paste("Daily Vaccinations Trend during the Encouragment (All)")) +
geom_point() +
geom_smooth(method = "lm", col = "gray", se = TRUE)
print(p2)
model <- summary(TS_model)
if (length(model) == 0) {
next
} else if (length(model$coef[,1]) < 4) {
next
} else {
p_val <- pf(model$fstatistic[1], model$fstatistic[2], model$fstatistic[3], lower.tail = FALSE)
actual_0 <- TS_data$vaccinations_day[min(which(TS_data$Treatment == 1))]
actual_3 <- TS_data$vaccinations_day[which(TS_data$Time_since == 3)]
actual_5 <- TS_data$vaccinations_day[which(TS_data$Time_since == 5)]
counterfactual_0 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[min(which(TS_data$Treatment == 1))]
counterfactual_3 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[which(TS_data$Time_since == 3)]
counterfactual_5 <- model$coef[1,1] + model$coef[2,1] * TS_data$Time[which(TS_data$Time_since == 5)]
all_models <<- add_row(all_models, "ID" = as.integer(id),
"Encouragement" = as.character(name), "Group" = "All",
"Intercept" = model$coef[1,1], "P-value (Intercept)" = model$coef[1,4],
"Time" = model$coef[2,1], "P-value (Time)" = model$coef[2,4],
"Treatment" = model$coef[3,1], "P-value (Treatment)" = model$coef[3,4],
"Time Since" = model$coef[4,1], "P-value (Time Since)" = model$coef[4,4],
"P-value (Model)" = p_val,
"Actual (Day 0)" = actual_0,
"Counterfactual (Day 0)" = counterfactual_0,
"Difference (Day 0)" = actual_0 - counterfactual_0,
"Actual (Day 3)" = actual_3,
"Counterfactual (Day 3)" = counterfactual_3,
"Difference (Day 3)" = actual_0 - counterfactual_3,
"Actual (Day 5)" =  actual_5,
"Counterfactual (Day 5)" = counterfactual_5,
"Difference (Day 5)" = actual_5 - counterfactual_5)
model
}
}
# Chunk 5
# Report the analysis for our ITS here
all_models <- tibble("ID" = numeric(), "Encouragement" = character(), "Group" = character(), "Intercept" = numeric(), "P-value (Intercept)" = numeric(), "Time" = numeric(), "P-value (Time)" = numeric(), "Treatment" = numeric(), "P-value (Treatment)" = numeric(), "Time Since" = numeric(), "P-value (Time Since)" = numeric(), "P-value (Model)" = numeric(), "Actual (Day 0)" = numeric(), "Counterfactual (Day 0)" = numeric(), "Difference (Day 0)" = numeric(), "Actual (Day 3)" = numeric(), "Counterfactual (Day 3)" = numeric(), "Difference (Day 3)" = numeric(), "Actual (Day 5)" = numeric(), "Counterfactual (Day 5)" = numeric(), "Difference (Day 5)" = numeric())
for (row in 1:nrow(incentives)) {
id <- incentives[row, "id"]
tract <- incentives[row, "census_tract"]
age <- incentives[row, "target_age"]
race <- incentives[row, "target_racethgroup"]
gender <- incentives[row, "target_gender"]
start_date <- as.data.frame(incentives[row, "start"])[1, 1]
name <- incentives[row, "name"]
cat(paste("\nEncouragement:", name, "\n"))
cat(paste("\n   ID: ", id, "\n"))
cat(paste("\n   Location (Census Tract): ", tract, "\n"))
cat(paste("\n   Target age group(s): ", age, "\n"))
cat(paste("\n   Target race group(s): ", race, "\n"))
cat(paste("\n   Target gender(s): ", gender, "\n"))
cat(paste("\n   Start date:", start_date, "\n"))
cat("\n")
if (typeof(ITS_model(id, tract, start_date, age, race, gender, name)) == "logical") {
next
}
cat("\n")
}
# load packages and data
library(readr)
library(dplyr)
library(DT)
library(tidytext)
library(forcats)
library(ggplot2)
library(kableExtra)
# Set objects
experts <- c("uber_pye","areeda","mzevin1","RF45","jrsmith02","sbc538")
collaborators <- c("adamamiller","olipatane","smarttiz","jafeldt","mcoughlin","citizenscientist1994","cjackso3",
"camallen","lmp579","sciencejedi","crowston","Carsten","jessiemcd","ejm553","srallen",
"costerlu@syr.edu","lcalian","joeykey","matsoulina","trouille","zooniverse")
moderators <- c("achilles308","futurewaves","wavewavewave","EcceruElme")
# Data on research drive folder /Volumes/cbjackson2/motif. Remeber to connect to VPN and mount drive
user_motifs <- read_csv("/Volumes/cbjackson2/motif/user_level_motif.csv")
# load packages and data
library(readr)
library(dplyr)
library(DT)
library(tidytext)
library(forcats)
library(ggplot2)
library(kableExtra)
# Set objects
experts <- c("uber_pye","areeda","mzevin1","RF45","jrsmith02","sbc538")
collaborators <- c("adamamiller","olipatane","smarttiz","jafeldt","mcoughlin","citizenscientist1994","cjackso3",
"camallen","lmp579","sciencejedi","crowston","Carsten","jessiemcd","ejm553","srallen",
"costerlu@syr.edu","lcalian","joeykey","matsoulina","trouille","zooniverse")
moderators <- c("achilles308","futurewaves","wavewavewave","EcceruElme")
# Data on research drive folder /Volumes/cbjackson2/motif. Remeber to connect to VPN and mount drive
user_motifs <- read_csv("/Volumes/cbjackson2/motif/user_level_motif.csv")
user_motifs <- user_motifs[which(!user_motifs$type %in% c("otheruser","superuser") ),]
user_motifs$type <- recode(user_motifs$type, promoted = "promoted", detractor = "notpromoted",.default = NA_character_)
user_motifs$user_id <- as.factor(user_motifs$user_id)
########################  Add classification accuracy and total activities
user_performance <- read_csv("/Volumes/cbjackson2/motif/user_performance.csv")
user_performance[,c(1,9:10)] <- NULL
names(user_performance)[c(1,3,4)] <- c("user_id","start_session","end_session")
user_performance$user_id <- as.factor(user_performance$user_id)
setwd("~/Desktop/GitHub Code/motifs")
########################  Add promotion
View(user_performance)
View(user_motifs)
# What modes of action. How many different motifs are present for a volunteer
user_summary_sets <- user_motifs %>%
group_by(user_id) %>%
summarize(
distinct_set = length(unique(set1)),
total_sets = length(set1),
sessions = length(unique(start_time)),
set_diversiy = (total_sets/distinct_set),
first_set = min(start_time),
last_set = max(start_time),
current_level = max(as.numeric(level)))%>%
mutate(tenure_time =  difftime(last_set,first_set,units = "mins"),
status = if_else(last_set > as.Date(max(user_motifs$start_time)) %m-% months(1),"current","dropout"))
library(lubridate)
user_summary_sets <- user_motifs %>%
group_by(user_id) %>%
summarize(
distinct_set = length(unique(set1)),
total_sets = length(set1),
sessions = length(unique(start_time)),
set_diversiy = (total_sets/distinct_set),
first_set = min(start_time),
last_set = max(start_time),
current_level = max(as.numeric(level)))%>%
mutate(tenure_time =  difftime(last_set,first_set,units = "mins"),
status = if_else(last_set > as.Date(max(user_motifs$start_time)) %m-% months(1),"current","dropout"))
View(user_summary_sets)
user_summary_sets_viz <- ggplot(subset(user_summary_sets,distinct_set>2), aes(x=total_sets, y=distinct_set)) +
geom_point() +
labs(x = expression(~log~(Sets)), y = "Distinct Sets") +
theme_minimal()+ scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
View(user_summary_sets_viz)
user_summary_sets_viz
user_level_sets <- user_motifs %>%
group_by(user_id,level) %>%
summarize(
distinct_set = length(unique(set1)),
total_sets = length(set1),
set_diversiy = total_sets/distinct_set,
sessions = length(unique(start_time)),
first_lset = min(start_time),
last_lset = max(start_time),
status = paste0(unique(type))
) %>%
mutate(level_time =  difftime(last_lset,first_lset,units = "mins"),
status = if_else(level=="4","current",paste0(status)))
View(user_level_sets)
View(user_summary_sets)
View(user_level_sets)
library(data.table)
l1user_sets <-  data.table(user_level_sets[which(user_level_sets$level==1),])
l1user_sets <- l1user_sets %>%  select(user_id, level, distinct_set, total_sets) %>%
mutate(
distinct_sets.s = scale(distinct_set),
total_sets.s = scale(total_sets),
sets_diversity.s = scale(total_sets),
sets_diversity.s2 = total_sets.s*distinct_sets.s,
average.z = (distinct_sets.s + (total_sets.s)) / 2
)
### ALL MOTIFS BY TYPE
user_level_type_sets <- user_motifs %>%
group_by(user_id,level,type) %>%
summarize(
distinct_sets = length(unique(set1)),
total_sets = length(set1),
set_diversiy = total_sets/distinct_sets
)
library(data.table)
l1usertype_sets <-  data.table(user_level_type_sets[which(user_level_type_sets$level==1),])
l1usertype_sets <- l1usertype_sets %>%  select(user_id, level, distinct_sets, total_sets, type) %>%
mutate(
distinct_sets.s = scale(distinct_sets),
total_sets.s = scale(total_sets),
sets_diversity.s = scale(total_sets),
sets_diversity.s2 = total_sets.s*distinct_sets.s,
average.z = (distinct_sets.s + (total_sets.s)) / 2
)
View(l1user_sets)
View(l1usertype_sets)
View(user_level_sets)
allL1sets <- user_motifs[which(user_motifs$level==1),]
allL1_summary <- allL1sets %>%
group_by(user_id,type) %>%
summarize(
start_level = min(start_time),
distinct_sets = length(unique(set1)),
total_sets = length(set1),
set_diversiy = total_sets/distinct_sets
)
allL1_sets_type_summary <- allL1sets %>%
group_by(user_id,set1,type) %>%
summarize(
total_sets = length(set1)
)
allL1_set_summary <- allL1sets %>%
group_by(user_id,set1,type) %>%
summarize(
first_l1set = min(start_time),
last_l1set = max(start_time),
distinct_motif_combinations = length(unique(motif)),
total_motif = length(motif)
)
View(allL1_summary)
View(allL1_sets_type_summary)
View(allL1_set_summary)
View(user_performance)
View(user_summary_sets)
View(user_summary_sets_viz)
View(allL1_set_summary)
View(allL1_sets_type_summary)
View(allL1_summary)
View(allL1sets)
View(l1user_sets)
View(l1usertype_sets)
View(user_level_type_sets)
View(user_motifs)
